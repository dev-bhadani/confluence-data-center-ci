name: Confluence DC with PostgreSQL and License Page Test

on:
  push:
  workflow_dispatch:

jobs:
  confluence-license-test:
    name: Confluence Setup & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: confluence
          POSTGRES_USER: confluenceuser
          POSTGRES_PASSWORD: confluencepass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # === Stage 1: Setup Docker and Pull Confluence ===
      - name: 📦 Checkout Repository
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🧲 Pull Confluence Image
        run: docker pull atlassian/confluence:9.4-jdk21

      - name: 🌐 Create Network and Connect Postgres
        run: |
          docker network create confluence-net
          docker network connect confluence-net ${{ job.services.postgres.id }}

      - name: 🚀 Start Confluence Container
        run: |
          docker run -d \
            --name confluence \
            --network confluence-net \
            -p 8090:8090 \
            -e ATL_DB_TYPE=postgresql \
            -e ATL_JDBC_URL=jdbc:postgresql://postgres:5432/confluence \
            -e ATL_JDBC_USER=confluenceuser \
            -e ATL_JDBC_PASSWORD=confluencepass \
            -e ATL_DB_DRIVER=org.postgresql.Driver \
            atlassian/confluence:9.4-jdk21

      # === Stage 2: Wait for Startup ===
      - name: ⏳ Wait for Confluence to Start
        run: |
          echo "Giving Confluence 2.5 minutes to boot..."
          sleep 150

      # === Stage 3: Playwright Test ===
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install NPM + Playwright
        run: |
          npm init -y
          npm install --save-dev playwright

      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run Inline License Page Test (JS)
        env:
          BASE_URL: http://localhost:8090
          LICENSE_KEY: dummy-placeholder-license-key
        run: |
          mkdir -p tests
          cat > tests/license-check.spec.js <<'EOF'
          const { chromium } = require('playwright');

          (async () => {
            const baseURL = process.env.BASE_URL;
            const licenseKey = process.env.LICENSE_KEY;
            const browser = await chromium.launch();
            const page = await browser.newPage();

            await page.goto(`${baseURL}/setup/setuplicense.action`);

            if (page.url().includes('/setup/setuplicense.action')) {
              await page.waitForSelector('textarea[name="confLicenseString"]', { state: 'visible' });
              console.log('License Page loaded successful.');
              await page.screenshot({ path: 'license-page.png', fullPage: true });
              console.log('Screenshot saved: license-page.png');
            } else {
              console.log('License page not shown, skipping.');
            }
            await browser.close();
          })();
          EOF
          node tests/license-check.spec.js

      - name: 📤 Upload Screenshot Artifact
        uses: actions/upload-artifact@v3
        with:
          name: confluence-license-page
          path: license-page.png
